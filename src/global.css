/* scrollbar */
@import 'simplebar-react/dist/simplebar.min.css';

/* lazy image */
@import 'react-lazy-load-image-component/src/effects/blur.css';

/* map */
@import 'mapbox-gl/dist/mapbox-gl.css';

/* editor */
@import 'react-quill/dist/quill.snow.css';

/* carousel */
@import 'slick-carousel/slick/slick.css';
@import 'slick-carousel/slick/slick-theme.css';

/* lightbox */
@import 'yet-another-react-lightbox/styles.css';
@import 'yet-another-react-lightbox/plugins/captions.css';
@import 'yet-another-react-lightbox/plugins/thumbnails.css';

/* Prevent browser zoom on map touch gestures */
.leaflet-container {
    touch-action: pan-x pan-y !important;
    -webkit-touch-callout: none !important;
    -webkit-user-select: none !important;
    -khtml-user-select: none !important;
    -moz-user-select: none !important;
    -ms-user-select: none !important;
    user-select: none !important;
    -webkit-tap-highlight-color: transparent !important;
}

.leaflet-container * {
    -webkit-user-select: none !important;
    user-select: none !important;
}

/* Additional touch handling for map areas */
.leaflet-pane,
.leaflet-overlay-pane,
.leaflet-tooltip-pane,
.leaflet-popup-pane {
    touch-action: pan-x pan-y !important;
    -webkit-touch-callout: none !important;
    -webkit-user-select: none !important;
    user-select: none !important;
}

/* Allow marker pane to be interactive */
.leaflet-marker-pane {
    touch-action: manipulation !important;
    -webkit-touch-callout: none !important;
    -webkit-user-select: none !important;
    user-select: none !important;
}

/* Prevent text selection on map elements */
.leaflet-popup,
.leaflet-tooltip,
.leaflet-control {
    -webkit-user-select: none !important;
    user-select: none !important;
}

/* Handle map tiles specifically */
.leaflet-tile {
    touch-action: pan-x pan-y !important;
    -webkit-user-select: none !important;
    user-select: none !important;
}

/* Ensure markers are interactive on mobile */
.leaflet-marker-icon {
    touch-action: manipulation !important;
    -webkit-user-select: none !important;
    user-select: none !important;
    pointer-events: auto !important;
}

.leaflet-marker {
    touch-action: manipulation !important;
    pointer-events: auto !important;
}

.leaflet-marker-pane img {
    pointer-events: auto !important;
}

/* Ensure zoom controls work properly */
.leaflet-control-zoom {
    touch-action: manipulation !important;
}

.leaflet-control-zoom a {
    touch-action: manipulation !important;
    pointer-events: auto !important;
}

.leaflet-control-zoom-in,
.leaflet-control-zoom-out {
    touch-action: manipulation !important;
    pointer-events: auto !important;
}

/* Custom popup styling for mobile */
.custom-popup .leaflet-popup-content-wrapper {
    border-radius: 8px;
    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.15);
}

.custom-popup .leaflet-popup-content {
    margin: 12px 16px;
    min-width: 200px;
}

.custom-popup .leaflet-popup-tip {
    background: white;
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
}

/* Ensure popups are above other elements on mobile */
.leaflet-popup {
    z-index: 1000 !important;
}

.leaflet-popup-pane {
    z-index: 1000 !important;
}

/* Google Maps-like current location marker */
.gm-current-location-icon {
    background: transparent !important;
}

.gm-current-location-dot {
    position: relative;
    width: 14px;
    height: 14px;
    border-radius: 50%;
    background: #1a73e8;
    /* Google blue */
    box-shadow: 0 0 0 2px #fff, 0 0 10px rgba(26, 115, 232, 0.7);
}

.gm-current-location-dot::before {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    width: 5px;
    height: 5px;
    transform: translate(-50%, -50%);
    background: #fff;
    border-radius: 50%;
}

.gm-current-location-dot::after {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    width: 14px;
    height: 14px;
    transform: translate(-50%, -50%);
    border-radius: 50%;
    background: rgba(26, 115, 232, 0.25);
    animation: gm-pulse 0.9s ease-out infinite;
}

@keyframes gm-pulse {
    0% {
        transform: translate(-50%, -50%) scale(1);
        opacity: 0.7;
    }

    70% {
        transform: translate(-50%, -50%) scale(2);
        opacity: 0;
    }

    100% {
        opacity: 0;
    }
}